// === –£—Ä–æ–∫ 1: –±–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ===

// 1. isEven(n) ‚Äî true, –µ—Å–ª–∏ n —á—ë—Ç–Ω–æ–µ
function isEven(n) {
  return n % 2 === 0;
}

// 2. max(a, b) ‚Äî –±–æ–ª—å—à–µ–µ –∏–∑ –¥–≤—É—Ö —á–∏—Å–µ–ª
function max(a, b) {
  return a > b ? a : b;
}

// 3. greet(name) ‚Äî –≤—ã–≤–æ–¥–∏—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
function greet(name) {
  console.log(`üëã –ü—Ä–∏–≤–µ—Ç, ${name}!`);
}

/* --- –¢–µ—Å—Ç—ã --- */
console.log('isEven(4) ‚Üí', isEven(4));   // true
console.log('max(10, 7) ‚Üí', max(10, 7)); // 10
greet('–ê–Ω–¥—Ä–µ–π');                         // üëã –ü—Ä–∏–≤–µ—Ç, –ê–Ω–¥—Ä–µ–π!

function greet(name) {
  console.log(`üëã –ü—Ä–∏–≤–µ—Ç, ${name}!`);
}

greet('–ê–Ω–¥—Ä–µ–π');   // –≤—ã–∑–æ–≤
greet('–°–µ—Ä–≥–µ–π');

function square(n) {
  return n * n;
}

console.log(square(5));   // 25
console.log(square(12));  // 144
